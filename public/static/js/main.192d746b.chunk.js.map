{"version":3,"sources":["components/SingleTransaction/styles.module.scss","pages/Dashboard/AccountCard/accountcard.module.scss","assets/vectors/bgOne.jpg","components/SideBar/SideBar.module.scss","pages/Dashboard/ReceviersHistory/receviershistory.module.scss","components/NotificationEle/notificationele.module.scss","pages/Home/Home.module.scss","pages/Dashboard/Dashboard.module.scss","pages/Dashboard/transactionsHistory/styles.module.scss","components/NavBar/NavBar.module.scss","components/Notifications/notifications.module.scss","components/NavBar/mobile/styles.module.scss","components/Loading/Loading.module.scss","components/SendMoneyMobile/styles.module.scss","components/AppName/AppName.module.scss","components/SideBar/navLinks/styles.module.scss","components/TransLoading/trans_loading.module.scss","pages/Reports/reports.module.scss","pages/NotificationsMenu/notifications.module.scss","assets/icons/menu-svgrepo-com.svg","App.module.scss","pages/Welcome/Welcome.module.scss","pages/SignUp/AuthErrAlert/autherralert.module.scss","components/SendMoneyPanel/styles.module.scss","types/enums/system.ts","components/AppName/AppName.tsx","components/SideBar/navLinks/NavLinks.tsx","components/SideBar/SideBar.tsx","types/enums/transactions.ts","apis/system.ts","utils/system.ts","apis/transactions.ts","components/TransLoading/TransLoading.tsx","pages/Dashboard/transferMoney/component.tsx","components/SingleTransaction/component.tsx","pages/Dashboard/transactionsHistory/component.tsx","types/enums/auth.ts","components/SingleReceiver/SingleReceiver.tsx","pages/Dashboard/ReceviersHistory/ReceviersHistory.tsx","pages/Dashboard/AccountCard/AccountCard.tsx","pages/Dashboard/Dashboard.tsx","components/Cards/Cards.tsx","pages/Reports/Reports.tsx","pages/Support/Support.tsx","components/Notifications/Notifications.tsx","components/NotificationEle/NotificationEle.tsx","pages/NotificationsMenu/NotificationsMenu.tsx","components/NavBar/NavBar.tsx","apis/auth.ts","pages/Profile/Settings/Settings.tsx","pages/Profile/AccountDetails/AccountDetails.tsx","pages/Profile/Liabilites/Liabilites.tsx","pages/Profile/PersonalDetails/PersonalDetails.tsx","pages/Profile/Profile.tsx","components/InComeTransAlert/InComeTransAlert.tsx","components/NavBar/mobile/NavBar.tsx","pages/Home/Home.tsx","components/Loading/Loading.tsx","pages/SignUp/AuthErrAlert/AuthErrAlert.tsx","pages/Login/Login.tsx","pages/SignUp/SignUp.tsx","pages/Welcome/Welcome.tsx","pages/Dashboard/SubmitTransfer/component.tsx","components/DetailedSingleTrans/DetailedSingleTrans.tsx","components/SendMoneyMobile/SendMoneyMobile.tsx","components/SendMoneyPanel/SendMoneyPanel.tsx","App.tsx","store/reducers/auth.ts","store/reducers/system.ts","store/reducers/transactions.ts","store/rootReducer.ts","store/store.ts","index.tsx","pages/Dashboard/SubmitTransfer/styles.module.scss","components/DetailedSingleTrans/detailedsingletrans.module.scss","pages/Login/Login.module.scss","pages/SignUp/signup.module.scss","pages/Profile/Profile.module.scss","pages/Dashboard/transferMoney/styles.module.scss","assets/vectors/wallet.png","components/InComeTransAlert/incometransalert.module.scss","components/SingleReceiver/singlereceiver.module.scss"],"names":["module","exports","SystemActionsTypes","Devices","AppName","className","styles","src","Logo","alt","NavLinks","height","currentRoute","useSelector","system","navLinks","style","borderLeftColor","to","color","Provider","value","size","SideBar","auth","client","name","avatar","profile","img","TransTypes","TransferStatus","SetCurrentRoute","routeName","dispatch","type","SET_CURRENT_ROUTE","payload","addReceiverToHistory","phoneNo","_id","ADD_RECEIVER_TO_HISTORY","date","moment","format","receiver","receiversHis","localStorage","getItem","oldReceiversHis","JSON","parse","Boolean","filter","ele","length","updatedReceiversHis","setItem","stringify","addReceiverToLocalStorage","getReceiver","phone","a","RECEIVER_NOT_FOUND","SET_TRANSACTION","reqBody","receiverPhone","ReqConfig","method","headers","body","fetch","process","response","status","json","TransLoading","loader","TransferMoney","useState","isLoading","state","setState","btnRef","useRef","currentTransfer","transactions","useDispatch","useEffect","current","disabled","TRANS_LOADING","MakeTransaction","sectionName","transferTypesContainer","TransferWithPhone","Country","Phone","placeholder","onChange","e","target","Img","onClick","preventDefault","console","log","Error","ref","transferBtn","SingleTransaction","props","transaction","amount","note","detailedSingleTrans","singleTransaction","onMouseEnter","Number","transId","data","SHOW_DETAILED_SINGLE_TRANS","onMouseLeave","HIDE__DETAILED_SINGLE_TRANS","container","discription","TransactionsHistory","AuthTypes","transHistory","transactionsHistory","detailedsingletrans","sortiedByDate","trxSortedByDate","settrxSortedByDate","sections","Array","from","Set","map","trx","title","trxs","sortTrxsHisByDate","Transactions","TransactionsDate","singleTrans","SingleReceiver","element","oldDate","newDate","singleReceiver","details","sendBtn","ReceviersHistory","receiversHistory","receviershistory","recentBeneficiaries","nodata","AccountCard","push","useHistory","params","URLSearchParams","account","accountCard","Balance","balance","Account","sendMoneyBtn","append","search","toString","width","viewBox","fill","xmlns","d","Dashboard","useParams","useLocation","key","DashBoard","trxHisTitle","connect","setCurrentRoute","Expenses","Income","reports","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","Notifications","notifications","seen","notificationsCount","NotificationEle","notificationEle","sender","transAmount","notification","message","NotificationsMenu","NavBar","isOpen","AppCenter","notificationsRecord","updatedNotificationsRecord","NOTIFICATION_SEENED","Settings","AccountDetails","Liabilites","PersonalDetails","Profile","header","sideBar","user","mainArea","path","component","SignOut_Btn","SIGN_OUT","InComeTransAlert","incomingTransAlert","setTimeout","HIDE_INCOMING_TRANS_ALERT","motion","div","animate","y","transition","stiffness","inComeTransAlert","incomeIcon","isOpened","navBarMobile","AppIcon","menuIconContainer","MenuIcon","Home","RoutesArea","Cards","Reports","Support","Loading","AuthErrAlert","msg","CLEAR_AUTH_Err_MSG","initial","opacity","exit","errAlert","Login","clientCredentioal","password","isAuthorized","isLoggedIn","isLogged","errMsg","handleChange","handleLoginWithGoogle","googleData","googleTokenId","tokenId","LOGIN_SUCCESS","LOGIN_FAILD","reqInit","loginData","LoginForm","signupLink","onSubmit","Credentioal","config","AnimatePresence","logo","Wallet","clientId","REACT_APP_GOOGLE_AUTH_CLIENT_ID","buttonText","onSuccess","onFailure","cookiePolicy","googleLogin","seperator","htmlFor","formFooter","href","ForgetPassword","SocialMedia","copyRight","VectorsArea","vectorsImg","SignUp","handleSignUpWithGoogle","signUp","signUpForm","inputArea","Welcome","exact","SubmitTrans","isTransaferSubmited","submitTransfer","CLEAR_CURRENT_TRANSFER","ConfirmTransfer","Container","doneIcon","Header","IMG","Name","firstName","lastName","Details","DetailsContainer","icon","faUniversity","faPhone","Submit","SUBMIT_TRANSFER_ERR","SUBMIT_TRANSFER","token","authorization","submitTransRes","DetailedSingleTransaction","name_date","text","SendMoneyMobile","setReceiverPhone","sendMoneyMobile","SendMoneyPanel","isTrxReady","setIsTrxReady","sendMoneyPanel","App","pathname","client_id","device","query","on","RECEIVE_MONEY","INCOMING_TRANS_ALERT","modifiedNotification","addToLocalStorage","receiveMoney","Audio","play","deviceType","window","screen","MOBILE","DESKTOP","SET_DEVICE_TYPE","AUTH_FAILD","AUTH_SUCCESS","TRANS_ERR","SubmitTransferModal","DetailedSingleTrans","initState","loginReducer","action","removeItem","reverse","newBalance","newTransaction","updatedBalance","notificationRecord","systemReducer","SHOW_NOTIFICATIONS","notificationSeened","transactionsReducer","HIDE_SUBMIT_TRANS_MODAL","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.192d746b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleTransaction\":\"styles_singleTransaction__3jdFn\",\"img\":\"styles_img__3M9DU\",\"container\":\"styles_container__1SYbh\",\"discription\":\"styles_discription__3ioFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountCard\":\"accountcard_accountCard__8rcPx\",\"Balance\":\"accountcard_Balance__15B6C\",\"Account\":\"accountcard_Account__2F-RZ\",\"sendMoneyBtn\":\"accountcard_sendMoneyBtn__363XR\"};","module.exports = __webpack_public_path__ + \"static/media/bgOne.3562b5d4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__38KVu\",\"profile\":\"SideBar_profile__2lAdZ\",\"img\":\"SideBar_img__i6oS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"receviershistory\":\"receviershistory_receviershistory__2-nPC\",\"recentBeneficiaries\":\"receviershistory_recentBeneficiaries__d9NnW\",\"nodata\":\"receviershistory_nodata__UiT9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notificationele_notification__3vPB9\",\"avatar\":\"notificationele_avatar__1nrAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__20gYL\",\"RoutesArea\":\"Home_RoutesArea__jysit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashBoard\":\"Dashboard_DashBoard__1cMKu\",\"trxHisTitle\":\"Dashboard_trxHisTitle__2bumm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Transactions\":\"styles_Transactions__JNvdz\",\"TransactionsDate\":\"styles_TransactionsDate__Ce7wb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__Cqnef\",\"AppCenter\":\"NavBar_AppCenter__3-zHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"notifications_notifications__3UbOq\",\"notificationsCount\":\"notifications_notificationsCount__3n5ft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarMobile\":\"styles_navBarMobile__RM9zm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loading_Loading__tNCSj\",\"loader\":\"Loading_loader__1Eu3_\",\"Animate\":\"Loading_Animate__2jnHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMoneyMobile\":\"styles_sendMoneyMobile__1CKJs\",\"inputArea\":\"styles_inputArea__OMrx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppName\":\"AppName_AppName__1IxQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinks\":\"styles_navLinks__3kGeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"trans_loading_loader__2CXg7\",\"animate\":\"trans_loading_animate__7ns0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reports\":\"reports_reports__1DOwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"notifications_notifications__31H2E\"};","module.exports = __webpack_public_path__ + \"static/media/menu-svgrepo-com.5e8fdd76.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Welcome_Welcome__3iG7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errAlert\":\"autherralert_errAlert__16J2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMoneyPanel\":\"styles_sendMoneyPanel__2mqWe\"};","export enum SystemActionsTypes {\n    SET_CURRENT_ROUTE = \"SET_CURRENT_ROUTE\",\n    ADD_RECEIVER_TO_HISTORY = \"ADD_RECEIVER_TO_HISTORY\",\n    SHOW_DETAILED_SINGLE_TRANS = \"SHOW_DETAILED_SINGLE_TRANS\",\n    HIDE__DETAILED_SINGLE_TRANS = \"HIDE__DETAILED_SINGLE_TRANS\",\n    SHOW_NOTIFICATIONS = \"SHOW_NOTIFICATIONS\",\n    NOTIFICATION_SEENED = \"NOTIFICATION_SEENED\",\n    INCOMING_TRANS_ALERT = \"INCOMING_TRANS_ALERT\",\n    HIDE_INCOMING_TRANS_ALERT = \"HIDE_INCOMING_TRANS_ALERT\",\n    SET_DEVICE_TYPE = \"SET_DEVICE_TYPE\"\n}\n\nexport enum Devices {\n    MOBILE = 500,\n    DESKTOP = 501\n}","import React from \"react\";\nimport styles from \"./AppName.module.scss\";\nimport Logo from \"../../assets/vectors/wallet.png\";\n\nconst AppName = () => {\n  return (\n    <h2 className={styles.AppName}>\n      <img src={Logo} alt=\"\" />\n      <span>samPay</span>\n    </h2>\n  );\n};\n\nexport default AppName;\n","import React, { FC } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport { IconContext } from \"react-icons\";\nimport {\n  BsCreditCard,\n  RiDashboardLine,\n  IoIosContacts,\n  IoMdAnalytics,\n} from \"react-icons/all\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../../types/interfaces/store\";\nimport { Link } from \"react-router-dom\";\n\nconst NavLinks: FC<{ height: string | number }> = ({ height }) => {\n  const currentRoute = useSelector<AppState, string>(\n    ({ system }) => system.currentRoute\n  );\n  return (\n    <div className={styles.navLinks} style={{ height: `${height}` }}>\n      <ul>\n        <li\n          style={{\n            borderLeftColor:\n              currentRoute === \"DashBoard\" ? \"blue\" : \"transparent\",\n          }}\n        >\n          <Link\n            to=\"/dashboard\"\n            style={{\n              color: currentRoute === \"DashBoard\" ? \"blue\" : \"gray\",\n            }}\n          >\n            <IconContext.Provider\n              value={{\n                color: currentRoute === \"DashBoard\" ? \"blue\" : \"gray\",\n                size: \"20px\",\n              }}\n            >\n              <RiDashboardLine />\n            </IconContext.Provider>\n            <span>Dashboard</span>\n          </Link>\n        </li>\n        <li\n          style={{\n            borderLeftColor:\n              currentRoute === \"Reports\" ? \"blue\" : \"transparent\",\n          }}\n        >\n          <Link\n            to=\"/reports\"\n            style={{ color: currentRoute === \"Reports\" ? \"blue\" : \"gray\" }}\n          >\n            <IconContext.Provider\n              value={{\n                color: currentRoute === \"Reports\" ? \"blue\" : \"gray\",\n                size: \"20px\",\n              }}\n            >\n              <IoMdAnalytics />\n            </IconContext.Provider>\n            <span>Reports</span>\n          </Link>\n        </li>\n        <li\n          style={{\n            borderLeftColor: currentRoute === \"Cards\" ? \"blue\" : \"transparent\",\n          }}\n        >\n          <Link\n            to=\"/cards\"\n            style={{ color: currentRoute === \"Cards\" ? \"blue\" : \"gray\" }}\n          >\n            <IconContext.Provider\n              value={{\n                color: currentRoute === \"Cards\" ? \"blue\" : \"gray\",\n                size: \"20px\",\n              }}\n            >\n              <BsCreditCard />\n            </IconContext.Provider>\n            <span>Cards</span>\n          </Link>\n        </li>\n        <li\n          style={{\n            borderLeftColor:\n              currentRoute === \"Support\" ? \"blue\" : \"transparent\",\n          }}\n        >\n          <Link\n            to=\"/support\"\n            style={{ color: currentRoute === \"Support\" ? \"blue\" : \"gray\" }}\n          >\n            <IconContext.Provider\n              value={{\n                color: currentRoute === \"Support\" ? \"blue\" : \"gray\",\n                size: \"20px\",\n              }}\n            >\n              <IoIosContacts />\n            </IconContext.Provider>\n            <span>Support</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport styles from \"./SideBar.module.scss\";\nimport AppName from \"../AppName/AppName\";\nimport { Link } from \"react-router-dom\";\nimport { IconContext } from \"react-icons\";\nimport { IoIosArrowForward } from \"react-icons/all\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport NavLinks from \"./navLinks/NavLinks\";\n\ninterface SideBarProps {\n  currentRoute: string;\n  client: {\n    name: string;\n    avatar: string;\n  };\n}\n\nconst SideBar = () => {\n  const { currentRoute, client } = useSelector<AppState, SideBarProps>(\n    ({ system, auth }) => ({\n      currentRoute: system.currentRoute,\n      client: {\n        name: auth.client?.name!,\n        avatar: auth.client?.avatar!,\n      },\n    })\n  );\n  return (\n    <aside className={styles.SideBar}>\n      <AppName />\n      <NavLinks height={\"inital\"} />\n      <Link to=\"/profile\">\n        <div className={styles.profile}>\n          <div className={styles.img}>\n            <img src={client.avatar} alt=\"\" />\n          </div>\n          <h4>\n            <span>{client.name}</span>\n            <IconContext.Provider value={{ color: \"gray\" }}>\n              <IoIosArrowForward />\n            </IconContext.Provider>\n          </h4>\n        </div>\n      </Link>\n    </aside>\n  );\n};\n\nexport default SideBar;\n","export enum TransTypes {\n    SUBMIT_TRANSFER = \"SUBMIT_TRANSFER\",\n    SUBMIT_TRANSFER_ERR = \"SUBMIT_TRANSFER_ERR\",\n    RECEIVER_NOT_FOUND = \"RECEIVER_NOT_FOUND\",\n    SET_TRANSACTION = \"SET_TRANSACTION\",\n    RECEIVE_MONEY = \"RECEIVE_MONEY\",\n    HIDE_SUBMIT_TRANS_MODAL = \"HIDE_SUBMIT_TRANS_MODAL\",\n    CLEAR_CURRENT_TRANSFER = \"CLEAR_CURRENT_TRANSFER\"\n}\nexport enum TransferStatus {\n    TRANS_LOADING = \"TRANS_LOADING\",\n    TRANS_ERR = \"TRANS_ERR\",\n}","import { Devices, SystemActionsTypes } from \"../types/enums/system\";\nimport { DetailedSingleTrans, ReceiversHistoryEle } from \"../types/interfaces/system_api\";\nimport moment from \"moment\";\nimport { ReceiveMoneyNotification } from \"../types/interfaces/trans_apis\";\nimport { addReceiverToLocalStorage } from \"../utils/system\";\n\nexport const SetCurrentRoute = (routeName: string) => (dispatch: Function) => {\n  const {SET_CURRENT_ROUTE} = SystemActionsTypes;\n  dispatch({ type: SET_CURRENT_ROUTE, payload: routeName });\n};\n// add receiver to the history\nexport const addReceiverToHistory = ({name, phoneNo, _id, img}: ReceiversHistoryEle) => (dispatch: Function) => {\n  const { ADD_RECEIVER_TO_HISTORY} = SystemActionsTypes;\n  // history ele date\n  const date = moment().format(\"YYYY-MMM-DD, h:mm a\")\n  const historyEle = {\n    img,\n    date,\n    name,\n    phoneNo,\n    _id\n  } as ReceiversHistoryEle;\n  // add history ele to local storage\n  const updatedReceiversHis = addReceiverToLocalStorage(historyEle);\n  dispatch({ type: ADD_RECEIVER_TO_HISTORY, payload: updatedReceiversHis });\n};\n// show detailed single trans component\nexport const showDetailedSingleTrans = (data: DetailedSingleTrans) => (dispatch: Function) => {\n  const {SHOW_DETAILED_SINGLE_TRANS} = SystemActionsTypes;\n  dispatch({type: SHOW_DETAILED_SINGLE_TRANS, payload: data})\n}\n// hide detailed single trans component\nexport const hideDetailedSingleTrans = () => (dispatch: Function) => {\n  const {HIDE__DETAILED_SINGLE_TRANS} = SystemActionsTypes;\n  // dispatch an action to redux store\n  dispatch({type: HIDE__DETAILED_SINGLE_TRANS})\n}\n// set notifications to seened;\nexport const seeNotifications = () => (dispatch: Function) => {\n  const notificationsRecord = localStorage.getItem(\"notifications\");\n  // if no notifications\n  if(notificationsRecord === null) {\n    return\n  }\n  const parsedNotificationsRecord = JSON.parse(notificationsRecord) as ReceiveMoneyNotification[];\n  // set unseen notifications to seen\n  const updatedNotificationsRecord = parsedNotificationsRecord.map(notificationEle => {\n    // if notification is seened\n    if(notificationEle.seen) {\n      return notificationEle\n    }\n    // if notification is unseened\n    const notficationSeened = {...notificationEle, seen: true} as ReceiveMoneyNotification;\n    return notficationSeened\n  });\n  localStorage.setItem(\"notifications\", JSON.stringify(updatedNotificationsRecord));\n  const {NOTIFICATION_SEENED} = SystemActionsTypes;\n  dispatch({type: NOTIFICATION_SEENED, payload: updatedNotificationsRecord})\n}\n// hide incoming trans alert\nexport const hideIncomingTransAlert = () => (dispatch: Function) => {\n  const {HIDE_INCOMING_TRANS_ALERT} = SystemActionsTypes\n  dispatch({type: HIDE_INCOMING_TRANS_ALERT})\n}\n// set device type api\nexport const setDeviceType = (deviceType: Devices) => (dispatch: Function) => {\n  dispatch({type: SystemActionsTypes.SET_DEVICE_TYPE, payload: deviceType})\n}","import { Devices } from \"../types/enums/system\";\nimport { ReceiversHistoryEle } from \"../types/interfaces/system_api\";\n\n// add receivers Histroy to localstorage\nexport const addReceiverToLocalStorage = (receiver: ReceiversHistoryEle) => {\n    // receiver history\n    const receiversHis = localStorage.getItem(\"receiverHis\");\n    // i wanna to replace new existen receiver with old one\n    // check if true\n    if(receiversHis) {\n      // update receivers His\n      // const updatedReceiversHis = [receiver, ...JSON.parse(receiversHis) as []];\n      const oldReceiversHis = JSON.parse(receiversHis) as ReceiversHistoryEle[];\n      // is new Receiver exist in oldReceiverHis\n      const isReceiverAlreadyExist = Boolean(oldReceiversHis.filter(ele => ele._id === receiver._id).length);\n      // check if the receiver exsit\n      if(isReceiverAlreadyExist) {\n        const updatedReceiversHis = [receiver, ...oldReceiversHis.filter(ele => ele._id !== receiver._id)];\n        localStorage.setItem(\"receiverHis\", JSON.stringify(updatedReceiversHis));\n        return updatedReceiversHis\n      }\n      // receiver is not exist in receiversHis so add it to there\n      const updatedReceiversHis = [receiver, ...oldReceiversHis];\n      localStorage.setItem(\"receiverHis\", JSON.stringify(updatedReceiversHis));\n      return updatedReceiversHis\n    }\n    // if receiver His is empty\n    const updatedReceiversHis = JSON.stringify([receiver]);\n    localStorage.setItem(\"receiverHis\", updatedReceiversHis);\n    return updatedReceiversHis\n}\n// check for device screen\nexport const checkDeviceScreen = () => {\n  if(window.screen.width <= Devices.MOBILE) {\n    console.log(\"it's mobile\")\n    return Devices.MOBILE\n  }\n  return Devices.DESKTOP\n}","import { GetReceiverBody, \n        GetReceiverParms, \n        ReceiveMoneyNotification, \n        SubmitTransferRes, \n        SubmitTransParms \n    } from \"../types/interfaces/trans_apis\";\nimport { TransTypes } from \"../types/enums/transactions\";\nimport { Client } from \"../types/interfaces/store\";\nimport { SystemActionsTypes } from \"../types/enums/system\";\nconst api_url = process.env.REACT_APP_API_URL!;\n\n// make Transaction\nexport const getReceiver = (phone: GetReceiverParms) => async (dispatch: Function) => {\n    const {RECEIVER_NOT_FOUND, SET_TRANSACTION} = TransTypes;\n    // get receiver request body\n    const reqBody: GetReceiverBody = {receiverPhone: phone}\n    // request config object\n    const ReqConfig: RequestInit = {\n        method: \"POST\",\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify(reqBody)\n    }\n    // init request\n    const response = await fetch(`${api_url}/transfer/get_receiver`, ReqConfig);\n    // check if an error found\n    if(response.status !== 200) {\n        dispatch({type: RECEIVER_NOT_FOUND})\n        return\n    }\n    // Parse the Response\n    const receiver = await response.json() as Client;\n    dispatch({type: SET_TRANSACTION, payload: receiver})\n}\n// submit the transaction\nexport const submitTransfer = (data: SubmitTransParms) => async (dispatch: Function) => {\n   const {SUBMIT_TRANSFER_ERR, SUBMIT_TRANSFER} = TransTypes;\n  // get the token from the local storage\n  const token = localStorage.getItem(\"token\")!;\n  // req config obj\n  const ReqConfig: RequestInit = {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      authorization: token\n    },\n    body: JSON.stringify(data)\n  }\n  // init request \n  const response = await fetch(`${api_url}/transfer/submit_transfer`, ReqConfig);\n  // check if an error\n  if(response.status !== 200) {\n      dispatch({type: SUBMIT_TRANSFER_ERR})\n      return\n  }\n  // Parsing response\n  const submitTransRes = await response.json() as SubmitTransferRes;\n  // if it done\n  dispatch({type: SUBMIT_TRANSFER, payload: submitTransRes})\n}\n// \nexport const receiveMoney = (notification: ReceiveMoneyNotification) => (dispatch: Function) => {\n  const {RECEIVE_MONEY} = TransTypes;\n  const {INCOMING_TRANS_ALERT} = SystemActionsTypes\n  // add receivers Histroy to localstorage\n  const addToLocalStorage = (data: ReceiveMoneyNotification) => {\n    // receiver history\n    const notificationsRecord = localStorage.getItem(\"notifications\");\n    // check if true\n    if(notificationsRecord) {\n      // update receivers His\n      const updatedNotificationsRecord = [data, ...JSON.parse(notificationsRecord) as []];\n      localStorage.setItem(\"notifications\", JSON.stringify(updatedNotificationsRecord));\n      return\n    }\n    // if receiver His is empty\n    localStorage.setItem(\"notifications\", JSON.stringify([data]))\n  }\n  // set notification unseen\n  const modifiedNotification = {\n    ...notification,\n    seen: false\n  } as ReceiveMoneyNotification;\n  // add notification to localhistory\n  addToLocalStorage(modifiedNotification);\n  dispatch({type: RECEIVE_MONEY, payload: modifiedNotification})\n  dispatch({type: INCOMING_TRANS_ALERT, payload: notification})\n}\n// hide submit transfer modal\nexport const hideSubmitTransModal = () => (dispatch: Function) => {\n  const {HIDE_SUBMIT_TRANS_MODAL} = TransTypes;\n  dispatch({type: HIDE_SUBMIT_TRANS_MODAL})\n}\n// clear current transfer \nexport const clearCurrentTransfer = () => (dispatch: Function) => {\n  const {CLEAR_CURRENT_TRANSFER} = TransTypes;\n  dispatch({type: CLEAR_CURRENT_TRANSFER})\n}","import React from \"react\";\nimport styles from \"./trans_loading.module.scss\";\n\nconst TransLoading = () => {\n  return <div className={styles.loader}></div>;\n};\n\nexport default TransLoading;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getReceiver } from \"../../../apis/transactions\";\nimport TransLoading from \"../../../components/TransLoading/TransLoading\";\nimport { TransferStatus } from \"../../../types/enums/transactions\";\nimport { AppState } from \"../../../types/interfaces/store\";\nimport { CurrentTransfer } from \"../../../types/interfaces/trans_reducer\";\nimport { GetReceiverComState } from \"./interface\";\nimport styles from \"./styles.module.scss\";\n\nfunction TransferMoney() {\n  // local state of component\n  const [state, setState] = useState<GetReceiverComState>({\n    receiverPhone: \"\",\n    isLoading: false,\n  });\n  // ref\n  const btnRef = useRef<HTMLButtonElement>(null);\n  // get data from the store\n  const currentTransfer = useSelector<AppState, CurrentTransfer>(\n    ({ transactions }) => transactions.currentTransfer\n  );\n  // dispatch store function\n  const dispatch = useDispatch();\n  // handle inputs of user\n  function inputHandler(e: React.ChangeEvent<HTMLInputElement>) {\n    // update the state of component\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n  // component update and mount\n  useEffect(() => {\n    if (!state.receiverPhone) {\n      btnRef.current!.disabled = true;\n      return;\n    }\n    btnRef.current!.disabled = false;\n  });\n  // DO Transfer\n  function Transfer(e: React.FormEvent) {\n    // prevent default action of form\n    e.preventDefault();\n    // check\n    if (!state.receiverPhone) {\n      console.log(new Error(\"no phone entered\"));\n      return;\n    }\n    // get the receiver form the server\n    dispatch(getReceiver(state.receiverPhone));\n    // run the loading\n    setState({\n      ...state,\n      isLoading: true,\n    });\n  }\n  // whatch currentTransfer changes\n  useEffect(() => {\n    // if current transfer == transloading\n    if (currentTransfer !== TransferStatus.TRANS_LOADING) {\n      setState({\n        ...state,\n        isLoading: false,\n      });\n    }\n  }, [currentTransfer]);\n  return (\n    <div className={styles.MakeTransaction}>\n      <h4 className={styles.sectionName}>Quick Transfer</h4>\n      {/* select transfer type */}\n      <ul className={styles.transferTypesContainer}>\n        <li>Via Account No</li>\n        <li>Via Mobile No</li>\n      </ul>\n      {/* Transfer with phone number */}\n      <div className={styles.TransferWithPhone}>\n        {/* select country */}\n        <div className={styles.Country}>\n          <span></span>\n          <span>+249</span>\n        </div>\n        {/* phone numbrer input */}\n        <div className={styles.Phone}>\n          <input\n            type=\"number\"\n            name=\"receiverPhone\"\n            value={state.receiverPhone}\n            placeholder=\"Enter receiver phone\"\n            onChange={inputHandler}\n          />\n        </div>\n        {/* client image */}\n        <div className={styles.Img}></div>\n      </div>\n      {/* Do tranfer btn */}\n      <button onClick={Transfer} ref={btnRef} className={styles.transferBtn}>\n        {state.isLoading ? <TransLoading /> : \"Transfer\"}\n      </button>\n    </div>\n  );\n}\n// export component and connect it to the store\nexport default TransferMoney;\n","import moment from \"moment\";\nimport React, { MouseEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  hideDetailedSingleTrans,\n  showDetailedSingleTrans,\n} from \"../../apis/system\";\nimport { AppState, SingleTrans } from \"../../types/interfaces/store\";\nimport { DetailedSingleTrans } from \"../../types/interfaces/system_api\";\nimport { SingleTransProps } from \"./interface\";\nimport styles from \"./styles.module.scss\";\n\nconst SingleTransaction: React.FC<SingleTransProps> = (props) => {\n  const { receiver, amount, date, note } = props.transaction;\n  // get detailed single trans from store\n  const detailedSingleTrans = useSelector<AppState, DetailedSingleTrans>(\n    ({ system }) => {\n      return system.detailedSingleTrans!;\n    }\n  );\n  // dispatch store function\n  const dispatch = useDispatch();\n  // handle mouse leave\n  const handleMouseLeave = () => {\n    // check for detailed single trans\n    if (detailedSingleTrans !== null) {\n      // dispatch an action\n      dispatch(hideDetailedSingleTrans());\n    }\n  };\n  // handle mouse over\n  const handleMouseOver = (e: MouseEvent<HTMLDivElement>) => {\n    // check if detailedSingleTrans = null\n    if (detailedSingleTrans === null) {\n      const detailedSingleTrans = {\n        date,\n        name: receiver.name,\n        amount: Number(amount),\n        avatar: receiver.avatar,\n        note,\n        transId: \"transactio_uuid\",\n      } as DetailedSingleTrans;\n      // dispatch an action to the store\n      dispatch(showDetailedSingleTrans(detailedSingleTrans));\n    }\n  };\n  return (\n    <div\n      className={styles.singleTransaction}\n      onMouseEnter={handleMouseOver}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className={styles.img}></div>\n      <div className={styles.container}>\n        <h3>Transfer To {receiver.name}</h3>\n        <p className={styles.discription}>{moment(date).format(\"h:mm a\")}</p>\n      </div>\n      <h4>${amount}</h4>\n    </div>\n  );\n};\n\nexport default SingleTransaction;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, SingleTrans } from \"../../../types/interfaces/store\";\nimport SingleTransaction from \"../../../components/SingleTransaction/component\";\nimport { TransHisProps } from \"./interface\";\nimport styles from \"./styles.module.scss\";\nimport DetailedSingleTrans from \"../../../components/DetailedSingleTrans/DetailedSingleTrans\";\nimport moment from \"moment\";\n\ninterface Section {\n  title: string;\n  trxs: SingleTrans[];\n}\n\nfunction TransactionsHistory() {\n  const { transHistory, detailedsingletrans } = useSelector<\n    AppState,\n    TransHisProps\n  >(({ auth, system }) => ({\n    transHistory: auth.client?.transactionsHistory!,\n    detailedsingletrans: system.detailedSingleTrans,\n  }));\n  // state\n  const [trxSortedByDate, settrxSortedByDate] = useState<{\n    sortiedByDate: Section[];\n  }>({ sortiedByDate: [] });\n  // transactions dates\n  const sortTrxsHisByDate = () => {\n    const datesArray = Array.from(\n      new Set(transHistory.map((trx) => moment(trx.date).format(\"YYYY-MMM-DD\")))\n    );\n    let sections: Section[] = datesArray.map((date) => ({\n      title: date,\n      trxs: transHistory.filter((trx) => {\n        const trxDate = moment(trx.date).format(\"YYYY-MMM-DD\"); // 21\n        if (trxDate === date) {\n          return true;\n        }\n      }),\n    }));\n    settrxSortedByDate({ sortiedByDate: sections });\n  };\n\n  useEffect(() => {\n    sortTrxsHisByDate();\n  }, [transHistory]);\n  // transactions History\n  return (\n    <section className={styles.Transactions}>\n      {trxSortedByDate.sortiedByDate.map((ele) => (\n        <div>\n          <h4 className={styles.TransactionsDate}>{ele.title}</h4>\n          {ele.trxs.map((singleTrans) => {\n            return <SingleTransaction transaction={singleTrans} />;\n          })}\n        </div>\n      ))}\n    </section>\n  );\n}\n\nexport default TransactionsHistory;\n","export enum AuthTypes {\n    AUTH_SUCCESS = \"AUTH_USER_SUCCESS\",\n    AUTH_FAILD = \"AUTH_USER_FAILD\",\n    LOGIN_SUCCESS = \"LOGIN_USER_SUCCESS\",\n    LOGIN_FAILD = \"LOGIN_USER_FAILD\",\n    SIGN_OUT = \"USER_SIGN_OUT\",\n    SET_CURRENT_ROUTE = \"SET_CURRENT_ROUTE\",\n    SIGNUP_WITH_GOOGLE_FAILED = \"SIGNUP_WITH_GOOGLE_FAILED\",\n    CLEAR_AUTH_Err_MSG = \"CLEAR_AUTH_Err_MSG\"\n}","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getReceiver } from \"../../apis/transactions\";\nimport { SingleReceiverProps } from \"./interface\";\nimport styles from \"./singlereceiver.module.scss\";\n\nconst SingleReceiver: React.FC<SingleReceiverProps> = (props) => {\n  const { date: oldDate, name, phoneNo } = props.element;\n  const dispatch = useDispatch();\n  // state\n  const [newDate, setNewDate] = useState<{ date: string }>({\n    date: moment(oldDate!).format(\"YYYY-MMM-DD\"),\n  });\n  // send money\n  const sendMoney = () => {\n    dispatch(getReceiver(phoneNo as unknown as string));\n  };\n  return (\n    <div className={styles.singleReceiver}>\n      {/* receiver img */}\n      <span className={styles.img}></span>\n      {/* receiver name and date*/}\n      <span className={styles.details}>\n        <p className={styles.name}>{name}</p>\n        <p className={styles.date}>last paid on {newDate.date}</p>\n      </span>\n      {/* send again button */}\n      <button className={styles.sendBtn} onClick={sendMoney}>\n        send\n      </button>\n    </div>\n  );\n};\n\nexport default SingleReceiver;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SingleReceiver from \"../../../components/SingleReceiver/SingleReceiver\";\nimport { AppState } from \"../../../types/interfaces/store\";\nimport { ReceiversHistoryEle } from \"../../../types/interfaces/system_api\";\nimport styles from \"./receviershistory.module.scss\";\nconst ReceviersHistory = () => {\n  const receiversHistory = useSelector<AppState, ReceiversHistoryEle[]>(\n    ({ system }) => system.receiversHistory\n  );\n  return (\n    <div className={styles.receviershistory}>\n      <p className={styles.recentBeneficiaries}>Recent Beneficiaries</p>\n      {receiversHistory.map((ele) => {\n        return <SingleReceiver element={ele} />;\n      })}\n      {receiversHistory.length === 0 ? (\n        <h1 className={styles.nodata}>No Data</h1>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default ReceviersHistory;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, Client } from \"../../../types/interfaces/store\";\nimport styles from \"./accountcard.module.scss\";\nimport SendIcon from \"../../../assets/icons/send-svgrepo-com.svg\";\nimport { useHistory, useParams } from \"react-router\";\n\nconst AccountCard = () => {\n  // const myparams = useParams();\n  const { push } = useHistory();\n  // console.log(myparams);\n  // get data from redux store\n  const params = new URLSearchParams();\n  const { account, _id } = useSelector<AppState, Client>(\n    ({ auth }) => auth.client!\n  );\n  // return template\n  return (\n    <div className={styles.accountCard}>\n      <h6>Your Balance</h6>\n      <p className={styles.Balance}>{`\\$${account.balance}`}</p>\n      <p className={styles.Account}>{`Saving A/C ${_id}`}</p>\n      {/* mobile screens, send moeny btn */}\n      <div\n        className={styles.sendMoneyBtn}\n        onClick={() => {\n          params.append(\"trx\", \"true\");\n          push({ search: params.toString() });\n        }}\n      >\n        <svg\n          width=\"24px\"\n          height=\"24px\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M7.75778 6.14799C6.84443 5.77187 6.0833 5.45843 5.49196 5.30702C4.91915 5.16036 4.18085 5.07761 3.63766 5.62862C3.09447 6.17962 3.18776 6.91666 3.34259 7.48732C3.50242 8.07644 3.8267 8.83302 4.21583 9.7409L4.86259 11.25H10C10.4142 11.25 10.75 11.5858 10.75 12C10.75 12.4142 10.4142 12.75 10 12.75H4.8626L4.21583 14.2591C3.8267 15.167 3.50242 15.9236 3.34259 16.5127C3.18776 17.0833 3.09447 17.8204 3.63766 18.3714C4.18085 18.9224 4.91915 18.8396 5.49196 18.693C6.0833 18.5416 6.84443 18.2281 7.75777 17.852L19.1997 13.1406C19.4053 13.0561 19.6279 12.9645 19.7941 12.867C19.944 12.779 20.3434 12.5192 20.3434 12C20.3434 11.4808 19.944 11.221 19.7941 11.133C19.6279 11.0355 19.4053 10.9439 19.1997 10.8594L7.75778 6.14799Z\"\n            fill=\"white\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountCard;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SetCurrentRoute } from \"../../apis/system\";\nimport styles from \"./Dashboard.module.scss\";\nimport TransferMoney from \"./transferMoney/component\";\nimport TransactionsHistory from \"./transactionsHistory/component\";\nimport ReceviersHistory from \"./ReceviersHistory/ReceviersHistory\";\nimport AccountCard from \"./AccountCard/AccountCard\";\nimport { useParams, useHistory, useLocation } from \"react-router\";\n\nconst Dashboard = () => {\n  const params = useParams();\n  const {} = useHistory();\n  const { search, key } = useLocation();\n  console.log(params);\n  const dispatch = useDispatch();\n  // when component mount\n  useEffect(() => {\n    dispatch(SetCurrentRoute(\"DashBoard\"));\n  }, []);\n  // return the ui\n  return (\n    <div className={styles.DashBoard}>\n      <AccountCard />\n      <TransferMoney />\n      {/* visble on mobile */}\n      <p className={styles.trxHisTitle}>Trx. History</p>\n      <TransactionsHistory />\n      <ReceviersHistory />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SetCurrentRoute } from \"../../apis/system\";\n\nconst Cards = (props: { setCurrentRoute: any }) => {\n  useEffect(() => {\n    const { setCurrentRoute } = props;\n    setCurrentRoute(\"Cards\");\n  }, []);\n  return <div className=\"\">cards</div>;\n};\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    setCurrentRoute: (routeName: string) =>\n      dispatch(SetCurrentRoute(routeName)),\n  };\n};\n\nexport default connect(null, mapDispatch)(Cards);\n","import React, { useEffect } from \"react\";\nimport { SetCurrentRoute } from \"../../apis/system\";\nimport { connect } from \"react-redux\";\nimport styles from \"./reports.module.scss\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst Reports = (props: { setCurrentRoute: any }) => {\n  const data = [\n    {\n      name: \"Jan\",\n      Expenses: 40,\n      Income: 50,\n      // amt: 2400,\n    },\n    {\n      name: \"Feb\",\n      Expenses: 30,\n      Income: 60,\n      // amt: 2210,\n    },\n    {\n      name: \"Mar\",\n      Expenses: 20,\n      Income: 98,\n      // amt: 2290,\n    },\n    {\n      name: \"Apr\",\n      Expenses: 27,\n      Income: 39,\n      // amt: 2000,\n    },\n    {\n      name: \"May\",\n      Expenses: 90,\n      Income: 480,\n      // amt: 2181,\n    },\n    {\n      name: \"June\",\n      Expenses: 23,\n      Income: 38,\n      // amt: 2500,\n    },\n    {\n      name: \"July\",\n      Expenses: 34,\n      Income: 430,\n      // amt: 2100,\n    },\n  ];\n  useEffect(() => {\n    const { setCurrentRoute } = props;\n    setCurrentRoute(\"Reports\");\n  }, []);\n  return (\n    <div className={styles.reports}>\n      <LineChart\n        width={800}\n        height={420}\n        data={data}\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"Income\" stroke=\"green\" />\n        <Line type=\"monotone\" dataKey=\"Expenses\" stroke=\"red\" />\n      </LineChart>\n      {/* another line chart */}\n      <LineChart\n        width={800}\n        height={420}\n        data={data}\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"Income\" stroke=\"green\" />\n        {/* <Line type=\"monotone\" dataKey=\"Expenses\" stroke=\"green\" /> */}\n      </LineChart>\n    </div>\n  );\n};\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    setCurrentRoute: (routeName: string) =>\n      dispatch(SetCurrentRoute(routeName)),\n  };\n};\n\nexport default connect(null, mapDispatch)(Reports);\n","import React, { useEffect } from \"react\";\nimport { SetCurrentRoute } from \"../../apis/system\";\nimport { connect } from \"react-redux\";\n\nconst Support = (props: { setCurrentRoute: any }) => {\n  useEffect(() => {\n    const { setCurrentRoute } = props;\n    setCurrentRoute(\"Support\");\n  }, []);\n  return <div className=\"\">Support</div>;\n};\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    setCurrentRoute: (routeName: string) =>\n      dispatch(SetCurrentRoute(routeName)),\n  };\n};\n\nexport default connect(null, mapDispatch)(Support);\n","import React from \"react\";\nimport { RiNotification2Line } from \"react-icons/ri\";\nimport { IconContext } from \"react-icons/lib\";\nimport styles from \"./notifications.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../types/interfaces/store\";\n\nconst Notifications = () => {\n  const { notifications } = useSelector<AppState, { notifications: number }>(\n    ({ system }) => ({\n      notifications: system.notifications.filter((ele) => ele.seen === false)\n        .length,\n    })\n  );\n  return (\n    <span className={styles.notifications}>\n      <span className={styles.notificationsCount}>{notifications}</span>\n      <IconContext.Provider value={{ color: \"black\" }}>\n        <RiNotification2Line />\n      </IconContext.Provider>\n    </span>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport { NotificationEleProps } from \"./interface\";\nimport styles from \"./notificationele.module.scss\";\n\nconst NotificationEle: React.FC<NotificationEleProps> = (props) => {\n  const { sender, transAmount } = props.notificationEle;\n  return (\n    <div className={styles.notification}>\n      {/* avatar */}\n      <span className={styles.avatar}></span>\n      {/* notification message */}\n      <p className={styles.message}>\n        {`You received $${transAmount} from ${sender}`}\n      </p>\n    </div>\n  );\n};\n\nexport default NotificationEle;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport NotificationEle from \"../../components/NotificationEle/NotificationEle\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport styles from \"./notifications.module.scss\";\nimport { ReceiveMoneyNotification } from \"../../types/interfaces/trans_apis\";\n\nconst NotificationsMenu = () => {\n  const notifications = useSelector<AppState, ReceiveMoneyNotification[]>(\n    ({ system }) => system.notifications\n  );\n  return (\n    <div className={styles.notifications}>\n      <p>Notifications</p>\n      {/* if no notifications */}\n      {notifications.length ? \"\" : <p>No notifications right now</p>}\n      {notifications.map((ele) => (\n        <NotificationEle notificationEle={ele} />\n      ))}\n    </div>\n  );\n};\n\nexport default NotificationsMenu;\n","import React, { useState } from \"react\";\nimport styles from \"./NavBar.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { IconContext } from \"react-icons/lib\";\nimport { FiSearch } from \"react-icons/fi\";\nimport Notifications from \"../Notifications/Notifications\";\nimport NotificationsMenu from \"../../pages/NotificationsMenu/NotificationsMenu\";\nimport { useDispatch } from \"react-redux\";\nimport { seeNotifications } from \"../../apis/system\";\n\nconst NavBar = () => {\n  // dispatch store action\n  const dispatch = useDispatch();\n  // NavBar local state\n  const [state, setState] = useState<{\n    isOpen: boolean;\n  }>({\n    isOpen: false,\n  });\n  // handle open and close notifications pannel\n  const handleNotificationsMenu = () => {\n    // if it open close it\n    if (state.isOpen) {\n      setState({\n        ...state,\n        isOpen: false,\n      });\n      return;\n    }\n    // here that's mean it's close\n    setState({\n      ...state,\n      isOpen: true,\n    });\n    // dispatch an action\n    dispatch(seeNotifications());\n  };\n  return (\n    <nav className={styles.NavBar}>\n      {/* notifications menu */}\n      {state.isOpen ? <NotificationsMenu /> : \"\"}\n      {/* navbar search and notification icons */}\n      <ul className={styles.AppCenter}>\n        <li>\n          <Link to=\"\">\n            <IconContext.Provider value={{ color: \"black\" }}>\n              <FiSearch />\n            </IconContext.Provider>\n          </Link>\n        </li>\n        <li onClick={handleNotificationsMenu}>\n          <Notifications />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { ClientCredentioal, LoginSuccess } from \"../types/interfaces/auth_apis\";\nimport {AuthTypes} from '../types/enums/auth'\nimport { Client } from \"../types/interfaces/store\";\nconst api_url = process.env.REACT_APP_API_URL!;\n\n// login client method\nexport const LoginClient = (Credentioal: ClientCredentioal) => async (dispatch: Function) => {\n  const {LOGIN_SUCCESS, LOGIN_FAILD} = AuthTypes;\n  // request configuration \n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(Credentioal),\n  };\n\n  // sending data to the server\n  const response = await fetch(`${api_url}/auth/login`, config);\n  // check for status code\n  if(response.status === 400) {\n    dispatch({type: LOGIN_FAILD, payload: \"Client Not Exist\"})\n    return\n  }\n  // server error\n  if(response.status >= 500){\n    dispatch({type: LOGIN_FAILD, payload: \"Server Error!!!\"})\n    return\n  }\n  const loginData = await response.json() as LoginSuccess;\n  // response data\n  dispatch({type: LOGIN_SUCCESS, payload: loginData})\n};\n// Login With Google\nexport const LoginWithGoogle = (data: {googleTokenId: string}) => async (dispatch: Function) => {\n  const {LOGIN_SUCCESS, LOGIN_FAILD} = AuthTypes;\n  const reqInit = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  } as RequestInit\n  // fetch\n  const response = await fetch(`${api_url}/auth/login_with_google`, reqInit);\n  // check for status code\n  if(response.status === 400) {\n    dispatch({type: LOGIN_FAILD, payload: \"Sorry, No Account Acosieated With Email!!\"})\n    return\n  }\n  // handleing server error\n  if(response.status >= 500) {\n    console.log(\"unHundiled server error\");\n    return\n  }\n  const loginData = await response.json() as LoginSuccess;\n  // response data\n  dispatch({type: LOGIN_SUCCESS, payload: loginData})\n}\n// initate client function\nexport const InitateClient = () => async (dispatch: Function) => {\n  // Auth cases\n  const {AUTH_FAILD, AUTH_SUCCESS} = AuthTypes;\n  // get the token from the local storage\n  const token: string | null = localStorage.getItem(\"token\");\n  // check if token is exist\n  if (token) {\n    // request configuration object\n    const config: RequestInit = {\n      method: \"GET\",\n      headers: {\n        authorization: token,\n      },\n    };\n    // // send request to the server\n    const response = await fetch(`${api_url}/auth/initate_client`,config);\n    // check for the res status\n    if(response.status != 200){\n      dispatch({type: AUTH_FAILD})\n      return\n    }\n    // the response come from the server\n    const client = await response.json() as Client;\n    // dispatch action to the store\n    dispatch({type: AUTH_SUCCESS, payload: client})\n    return\n  }\n  dispatch({type: AUTH_FAILD})\n};\n// logout the client\nexport const SignOut = () => (dispatch: Function) => {\n  const {SIGN_OUT} = AuthTypes;\n  dispatch({ type: SIGN_OUT});\n};\n// Sign UP With Google\nexport const signUpWithGoogle = (data: {googleTokenId: string}) => async (dispatch: Function) => {\n  const {LOGIN_SUCCESS, LOGIN_FAILD} = AuthTypes;\n  const reqInit = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  } as RequestInit\n  // fetch\n  const response = await fetch(`${api_url}/auth/signup_with_google`, reqInit);\n  // check for status code\n  if(response.status === 400) {\n    dispatch({type: LOGIN_FAILD, payload: \"Sorry, User is Already Exist!!\"})\n    return\n  }\n  // handleing server error\n  if(response.status >= 500) {\n    console.log(\"unHundiled server error\");\n    return\n  }\n  const loginData = await response.json() as LoginSuccess;\n  // response data\n  dispatch({type: LOGIN_SUCCESS, payload: loginData})\n}\n// clear auth error message\nexport const clearAuthErrMsg = () => (dispatch: Function) => {\n  dispatch({type: AuthTypes.CLEAR_AUTH_Err_MSG})\n}\n// login client method\nexport const signUp = (Credentioal: ClientCredentioal) => async (dispatch: Function) => {\n  const {LOGIN_SUCCESS, LOGIN_FAILD} = AuthTypes;\n  // request configuration \n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(Credentioal),\n  };\n\n  // sending data to the server\n  const response = await fetch(`${api_url}/auth/signup`, config);\n  // check for status code\n  if(response.status === 400) {\n    dispatch({type: LOGIN_FAILD, payload: \"Client Exist\"})\n    return\n  }\n  // server error\n  if(response.status >= 500){\n    dispatch({type: LOGIN_FAILD, payload: \"Server Error!!!\"})\n    return\n  }\n  const loginData = await response.json() as LoginSuccess;\n  // response data\n  dispatch({type: LOGIN_SUCCESS, payload: loginData})\n};","import React from \"react\";\n\nconst Settings = () => {\n  return (\n    <div>\n      <h1>Settings</h1>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nconst AccountDetails = () => {\n  return (\n    <div>\n      <h1>Account Details</h1>\n    </div>\n  );\n};\n\nexport default AccountDetails;\n","import React from \"react\";\nconst Liabilites = () => {\n  return (\n    <div>\n      <h1>Liabilites</h1>\n    </div>\n  );\n};\n\nexport default Liabilites;\n","import React from \"react\";\nconst PersonalDetails = () => {\n  return (\n    <div>\n      <h1>Personal Details</h1>\n    </div>\n  );\n};\n\nexport default PersonalDetails;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SignOut } from \"../../apis/auth\";\nimport styles from \"./Profile.module.scss\";\nimport { SetCurrentRoute } from \"../../apis/system\";\nimport { Route, useHistory } from \"react-router\";\nimport Settings from \"./Settings/Settings\";\nimport AccountDetails from \"./AccountDetails/AccountDetails\";\nimport Liabilites from \"./Liabilites/Liabilites\";\nimport PersonalDetails from \"./PersonalDetails/PersonalDetails\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n  // use dispatch\n  const dispatch = useDispatch();\n  // redirect the user\n  const { push } = useHistory();\n  // sign out the user\n  const signOut = (): void => {\n    // dispatch an action to the redux store\n    dispatch(SignOut());\n  };\n  // when component mount\n  useEffect(() => {\n    // dispatch an action to redux store\n    dispatch(SetCurrentRoute(\"Profile\"));\n  }, []);\n  // component did update\n  useEffect(() => {\n    return () => {\n      // check if the user is logged in\n      push(\"/\");\n    };\n  }, []);\n  // return template\n  return (\n    <div className={styles.Profile}>\n      {/* container */}\n      <div className={styles.container}>\n        {/* header */}\n        <div className={styles.header}></div>\n        {/* side bar */}\n        <div className={styles.sideBar}>\n          <div className={styles.user}>\n            <span className={styles.avatar}></span>\n            <p>User Name here</p>\n          </div>\n          <ul className={styles.navLinks}>\n            <li>\n              <Link to=\"/profile/personal_details\">Personal Details</Link>\n            </li>\n            <li>\n              <Link to=\"/profile/settings\">Settings</Link>\n            </li>\n            <li>\n              <Link to=\"/profile/account_details\">Account Details</Link>\n            </li>\n            <li>\n              <Link to=\"/profile/liabilites\">Liabilites</Link>\n            </li>\n          </ul>\n        </div>\n        {/* main area */}\n        <div className={styles.mainArea}>\n          <Route path=\"/profile/settings\" component={Settings} />\n          <Route path=\"/profile/account_details\" component={AccountDetails} />\n          <Route path=\"/profile/liabilites\" component={Liabilites} />\n          <Route path=\"/profile/personal_details\" component={PersonalDetails} />\n        </div>\n      </div>\n      <button className={styles.SignOut_Btn} onClick={signOut}>\n        Sign Out\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideIncomingTransAlert } from \"../../apis/system\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport styles from \"./incometransalert.module.scss\";\nimport { IncomingTransAlertProps } from \"./interface\";\nimport { IconContext } from \"react-icons\";\nimport { FiArrowDown } from \"react-icons/fi\";\nimport { motion } from \"framer-motion\";\n\nconst InComeTransAlert = () => {\n  const dispatch = useDispatch();\n  const { incomingTransAlert } = useSelector<AppState, IncomingTransAlertProps>(\n    ({ system }) => ({ incomingTransAlert: system.incomingTransAlert })\n  );\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(hideIncomingTransAlert());\n      console.log(\"disappear\");\n    }, 3000);\n  });\n  return (\n    <motion.div\n      animate={{ y: 10 }}\n      transition={{\n        y: { type: \"keyframes\", stiffness: 100 },\n      }}\n      className={styles.inComeTransAlert}\n    >\n      <span className={styles.avatar}></span>\n      <div className={styles.container}>\n        <p className={styles.sender}>{incomingTransAlert?.sender}</p>\n        <p className={styles.date}>Now</p>\n      </div>\n      <p className={styles.amount}>\n        <span className={styles.incomeIcon}>\n          <IconContext.Provider value={{ color: \"green\", size: \"1.5rem\" }}>\n            <FiArrowDown />\n          </IconContext.Provider>{\" \"}\n        </span>\n        $ {incomingTransAlert?.transAmount}\n      </p>\n    </motion.div>\n  );\n};\n\nexport default InComeTransAlert;\n","import React, { useState } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport AppIcon from \"../../../assets/vectors/wallet.png\";\nimport MenuIcon from \"../../../assets/icons/menu-svgrepo-com.svg\";\nimport NavLinks from \"../../SideBar/navLinks/NavLinks\";\n\nfunction NavBar() {\n  const [state, setState] = useState<{ isOpened: boolean }>({\n    isOpened: false,\n  });\n  // menu click handler\n  const menuClickHandler = () => {\n    if (state.isOpened) {\n      setState({ isOpened: false });\n      return;\n    }\n    setState({ isOpened: true });\n  };\n  return (\n    <nav className={styles.navBarMobile}>\n      <img src={AppIcon} alt=\"\" />\n      <p>samPay</p>\n      <span className={styles.menuIconContainer} onClick={menuClickHandler}>\n        <img src={MenuIcon} alt=\"\" />\n      </span>\n      {/* navLinks */}\n      <NavLinks height={state.isOpened ? \"initial\" : \"0\"} />\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./Home.module.scss\";\nimport SideBar from \"../../components/SideBar/SideBar\";\nimport { Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Cards from \"../../components/Cards/Cards\";\nimport Reports from \"../Reports/Reports\";\nimport Support from \"../Support/Support\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { connect, useSelector } from \"react-redux\";\nimport Profile from \"../Profile/Profile\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport { HomeProps } from \"./interface\";\nimport InComeTransAlert from \"../../components/InComeTransAlert/InComeTransAlert\";\nimport NavBarMobile from \"../../components/NavBar/mobile/NavBar\";\n\nconst Home = () => {\n  const { incomingTransAlert } = useSelector<AppState, HomeProps>(\n    ({ system }) => ({ incomingTransAlert: system.incomingTransAlert })\n  );\n  return (\n    <section className={styles.Home}>\n      {incomingTransAlert ? <InComeTransAlert /> : \"\"}\n      <SideBar />\n      {/* mobile NavBar  */}\n      <NavBarMobile />\n      <section className={styles.RoutesArea}>\n        <NavBar />\n        <Route component={Dashboard} path=\"/dashboard\" />\n        <Route component={Cards} path=\"/cards\" />\n        <Route component={Reports} path=\"/reports\" />\n        <Route component={Support} path=\"/support\" />\n        <Route component={Profile} path=\"/profile\" />\n      </section>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styles from \"./Loading.module.scss\";\n\nconst Loading = () => {\n  return (\n    <div className={styles.Loading}>\n      <div className={styles.loader}></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { FC, useEffect } from \"react\";\nimport styles from \"./autherralert.module.scss\";\nimport { motion } from \"framer-motion\";\nimport { AuthErrAlertProps } from \"./interface\";\nimport { useDispatch } from \"react-redux\";\nimport { clearAuthErrMsg } from \"../../../apis/auth\";\n\nconst AuthErrAlert: FC<AuthErrAlertProps> = ({ msg }) => {\n  // dispatch function\n  const dispatch = useDispatch();\n  // component did mount\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(clearAuthErrMsg());\n    }, 2000);\n  });\n  return (\n    <motion.div\n      initial={{ opacity: 0.7 }}\n      animate={{ y: \"20px\", opacity: 1 }}\n      exit={{ y: \"-100px\" }}\n      className={styles.errAlert}\n    >\n      {msg}\n    </motion.div>\n  );\n};\n\nexport default AuthErrAlert;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Login.module.scss\";\nimport { FaFacebook, FaTwitter, FaInstagram } from \"react-icons/all\";\nimport { LoginState, LoginProps } from \"./login.interface\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LoginClient, LoginWithGoogle } from \"../../apis/auth\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport vectorsImg from \"../../assets/vectors/bgOne.jpg\";\nimport TransLoading from \"../../components/TransLoading/TransLoading\";\nimport { Link } from \"react-router-dom\";\nimport GoogleLogin, {\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport Wallet from \"../../assets/vectors/wallet.png\";\nimport { AnimatePresence } from \"framer-motion\";\nimport AuthErrAlert from \"../SignUp/AuthErrAlert/AuthErrAlert\";\n\nconst Login = () => {\n  const [state, setState] = useState<LoginState>({\n    clientCredentioal: {\n      name: \"\",\n      password: \"\",\n    },\n    isLoading: false,\n  });\n  // dispatch\n  const dispatch = useDispatch();\n  const { isAuthorized, errMsg, isLoggedIn } = useSelector<\n    AppState,\n    LoginProps\n  >(({ auth }) => ({\n    isAuthorized: Boolean(auth.client),\n    isLoggedIn: auth.isLogged,\n    errMsg: auth.errMsg,\n  }));\n  // component did mount\n  useEffect(() => {\n    if (isAuthorized) {\n      setState({\n        ...state,\n        isLoading: false,\n      });\n      // LogginClient();\n    }\n    if (Boolean(errMsg)) {\n      setState({\n        ...state,\n        isLoading: false,\n      });\n    }\n  }, [isAuthorized, errMsg]);\n  // handle from change\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setState({\n      ...state,\n      clientCredentioal: {\n        ...state.clientCredentioal!,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  // handle form submition\n  const handleSubmition = (e: React.FormEvent): void => {\n    e.preventDefault();\n    if (state.clientCredentioal!.name && state.clientCredentioal!.password) {\n      dispatch(LoginClient(state.clientCredentioal!));\n      setState({\n        ...state,\n        isLoading: true,\n      });\n    }\n  };\n  // handleLogin\n  const handleLoginWithGoogle = (\n    googleData: GoogleLoginResponse | GoogleLoginResponseOffline\n  ) => {\n    const googleOauthData = googleData as GoogleLoginResponse;\n    // send the tokenId to api to handle SignUpWithGoogle\n    dispatch(LoginWithGoogle({ googleTokenId: googleOauthData.tokenId }));\n  };\n  return (\n    <section className={styles.Login}>\n      {/* login form */}\n      <section className={styles.LoginForm}>\n        {/* signUp Link */}\n        <Link to=\"/signup\" className={styles.signupLink}>\n          Don't have an account? signup\n        </Link>\n        <form onSubmit={handleSubmition}>\n          {/* error message */}\n          <AnimatePresence>\n            {isLoggedIn === false ? (\n              errMsg ? (\n                <AuthErrAlert msg={errMsg} />\n              ) : (\n                \"\"\n              )\n            ) : (\n              \"\"\n            )}\n          </AnimatePresence>\n          {/* logo */}\n          <div className={styles.logo}>\n            <img src={Wallet} alt=\"\" />\n          </div>\n          {/* form name */}\n          <h2>Login To Your Account !!</h2>\n          {/* google login */}\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID!}\n            buttonText=\"Login With Google\"\n            onSuccess={handleLoginWithGoogle}\n            onFailure={handleLoginWithGoogle}\n            cookiePolicy={\"single_host_origin\"}\n            className={styles.googleLogin}\n          />\n          {/* seperator */}\n          <p className={styles.seperator}>Or</p>\n          {/* input field */}\n          {/* input field */}\n          <div>\n            <label htmlFor=\"\">E-mail</label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              value={state.clientCredentioal!.name!}\n              name=\"name\"\n            />\n          </div>\n          {/* input field */}\n          <div>\n            <label htmlFor=\"\">Password</label>\n            <input\n              type=\"password\"\n              onChange={handleChange}\n              name=\"password\"\n              value={state.clientCredentioal!.password}\n            />\n          </div>\n          {/* bottom are */}\n          <div className={styles.formFooter}>\n            {/* button */}\n            <button type=\"submit\">\n              {state.isLoading ? <TransLoading /> : \"Login\"}\n            </button>\n            {/* forget password link */}\n            <a href=\"\" className={styles.ForgetPassword}>\n              Forget Password\n            </a>\n          </div>\n          {/* social media links */}\n          <div className={styles.SocialMedia}>\n            <a href=\"\">\n              <FaInstagram />\n            </a>\n            <a href=\"\">\n              <FaTwitter />\n            </a>\n            <a href=\"\">\n              <FaFacebook />\n            </a>\n          </div>\n          {/* end of social media */}\n          {/* compy rights */}\n          <p className={styles.copyRight}>\n            <span className=\"\">2022</span>\n            <span className=\"\">samPay - All Right Reserved</span>\n          </p>\n          {/* end of copy rights section */}\n        </form>\n      </section>\n      {/* vecotr */}\n      <section className={styles.VectorsArea}>\n        <img src={vectorsImg} alt=\"\" />\n      </section>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./signup.module.scss\";\nimport { FaFacebook, FaTwitter, FaInstagram } from \"react-icons/all\";\nimport { LoginState, SignUpProps } from \"./interface\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUp, signUpWithGoogle } from \"../../apis/auth\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport vectorsImg from \"../../assets/vectors/bgOne.jpg\";\nimport TransLoading from \"../../components/TransLoading/TransLoading\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport GoogleLogin, {\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport Wallet from \"../../assets/vectors/wallet.png\";\nimport AuthErrAlert from \"./AuthErrAlert/AuthErrAlert\";\nimport { AnimatePresence } from \"framer-motion\";\n\nconst SignUp = () => {\n  // react router hooks\n  const { push } = useHistory();\n  // Componet State\n  const [state, setState] = useState<LoginState>({\n    clientCredentioal: {\n      name: \"\",\n      password: \"\",\n    },\n    isLoading: false,\n  });\n  // dispatch\n  const dispatch = useDispatch();\n  // Component Props\n  const { isAuthorized, errMsg, isLoggedIn } = useSelector<\n    AppState,\n    SignUpProps\n  >(({ auth }) => ({\n    isAuthorized: Boolean(auth.client),\n    errMsg: auth.errMsg,\n    isLoggedIn: auth.isLogged,\n  }));\n  // component did mount\n  useEffect(() => {\n    if (isAuthorized) {\n      setState({\n        ...state,\n        isLoading: false,\n      });\n    }\n    // LogginClient();\n    if (Boolean(errMsg)) {\n      console.log(errMsg);\n      setState({\n        ...state,\n        isLoading: false,\n      });\n    }\n  }, [isAuthorized, errMsg]);\n  // useEffect\n  useEffect(() => {\n    return function cleanUp() {\n      console.log(\"compoent un mount\");\n      push(\"/dashboard\");\n    };\n  }, []);\n  // handle from change\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setState({\n      ...state,\n      clientCredentioal: {\n        ...state.clientCredentioal!,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  // handle form submition\n  const handleSubmition = (e: React.FormEvent): void => {\n    e.preventDefault();\n    // form falidation\n    if (state.clientCredentioal!.name && state.clientCredentioal!.password) {\n      dispatch(signUp(state.clientCredentioal!));\n      setState({\n        ...state,\n        isLoading: true,\n      });\n    }\n  };\n  // handleLogin\n  const handleSignUpWithGoogle = (\n    googleData: GoogleLoginResponse | GoogleLoginResponseOffline\n  ) => {\n    const googleOauthData = googleData as GoogleLoginResponse;\n    // send the tokenId to api to handle SignUpWithGoogle\n    dispatch(signUpWithGoogle({ googleTokenId: googleOauthData.tokenId }));\n  };\n  return (\n    <section className={styles.signUp}>\n      {/* signUp form */}\n      <section className={styles.signUpForm}>\n        <form onSubmit={handleSubmition}>\n          {/* error message */}\n          <AnimatePresence>\n            {isLoggedIn === false ? (\n              errMsg ? (\n                <AuthErrAlert msg={errMsg} />\n              ) : (\n                \"\"\n              )\n            ) : (\n              \"\"\n            )}\n          </AnimatePresence>\n          {/* logo */}\n          <div className={styles.logo}>\n            <img src={Wallet} alt=\"\" />\n          </div>\n          {/* form name */}\n          <h2>Sign Up to samPay</h2>\n          {/* google login */}\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID!}\n            buttonText=\"SignUp With Google\"\n            onSuccess={handleSignUpWithGoogle}\n            onFailure={handleSignUpWithGoogle}\n            cookiePolicy={\"single_host_origin\"}\n            className={styles.googleLogin}\n          />\n          {/* seperator */}\n          <p className={styles.seperator}>Or</p>\n          {/* input field */}\n          <div className={styles.inputArea}>\n            <label htmlFor=\"\">E-mail</label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              value={state.clientCredentioal!.name!}\n              name=\"name\"\n            />\n          </div>\n          {/* input field */}\n          <div className={styles.inputArea}>\n            <label htmlFor=\"\">Password</label>\n            <input\n              type=\"password\"\n              onChange={handleChange}\n              name=\"password\"\n              value={state.clientCredentioal!.password}\n            />\n          </div>\n          {/* bottom are */}\n          <div className={styles.formFooter}>\n            {/* button */}\n            <button type=\"submit\">\n              {state.isLoading ? <TransLoading /> : \"Sign Up\"}\n            </button>\n          </div>\n          {/* end of buttom area */}\n          {/* social media links */}\n          <div className={styles.SocialMedia}>\n            <a href=\"\">\n              <FaInstagram />\n            </a>\n            <a href=\"\">\n              <FaTwitter />\n            </a>\n            <a href=\"\">\n              <FaFacebook />\n            </a>\n          </div>\n          {/* end social media links area */}\n          {/* compy rights */}\n          <p className={styles.copyRight}>\n            <span className=\"\">2022</span>\n            <span className=\"\">samPay - All Right Reserved</span>\n          </p>\n          {/* end of copy rights section */}\n        </form>\n      </section>\n      {/* end of signUp form section */}\n      {/* vecotr */}\n      <section className={styles.VectorsArea}>\n        <img src={vectorsImg} alt=\"\" />\n      </section>\n      {/* end vector area */}\n    </section>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport styles from \"./Welcome.module.scss\";\nimport { Route } from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport SignUp from \"../SignUp/SignUp\";\n\nconst Welcome = () => {\n  return (\n    <section className={styles.Welcome}>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/signup\" component={SignUp} />\n    </section>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faUniversity } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  clearCurrentTransfer,\n  hideSubmitTransModal,\n  submitTransfer,\n} from \"../../../apis/transactions\";\nimport { SubmitTransProps, SubmitTransState } from \"./interface\";\nimport { AppState, Client } from \"../../../types/interfaces/store\";\nimport { TransferStatus } from \"../../../types/enums/transactions\";\nimport { SubmitTransParms } from \"../../../types/interfaces/trans_apis\";\nimport TransLoading from \"../../../components/TransLoading/TransLoading\";\nimport { addReceiverToHistory } from \"../../../apis/system\";\nimport { useHistory } from \"react-router\";\n// import DoneIcon from \"../../../../public/icons/ok-1.1s-200px.svg\";\n\nconst SubmitTrans = () => {\n  const { push } = useHistory();\n  // the component state\n  const [state, setState] = useState<SubmitTransState>({\n    amount: 0,\n    isLoading: false,\n  });\n  // dispatch\n  const dispatch = useDispatch();\n  // get data from the redux store\n  const { currentTransfer, isTransaferSubmited } = useSelector<\n    AppState,\n    SubmitTransProps\n  >(({ transactions }) => ({\n    currentTransfer: transactions.currentTransfer as Client,\n    isTransaferSubmited: transactions.submitTransfer,\n  }));\n  // handle user inputs\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // update the state\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  // hideModal\n  const hideModal = () => {\n    dispatch(hideSubmitTransModal());\n  };\n  // handle submition\n  const handleSubmition = (e: React.FormEvent) => {\n    e.preventDefault();\n    // make loading indecator\n    setState({\n      ...state,\n      isLoading: true,\n    });\n    // complete the transfer proccess by calling the api\n    const transaction = {\n      receiverPhone: currentTransfer!.phone,\n      amount: Number(state.amount),\n    } as SubmitTransParms;\n    // call the api and dispatch an action to the redux store\n    dispatch(submitTransfer(transaction));\n    // add receiver to receivers history\n    dispatch(\n      addReceiverToHistory({\n        name: currentTransfer.name,\n        phoneNo: currentTransfer.phone as number,\n        _id: currentTransfer._id,\n        img: currentTransfer.avatar,\n      })\n    );\n  };\n  useEffect(() => {\n    if (isTransaferSubmited === true) {\n      setState({\n        ...state,\n        isLoading: false,\n      });\n      setTimeout(() => {\n        dispatch(clearCurrentTransfer());\n        push(\"/dashboard\");\n      }, 1500);\n    }\n  }, [isTransaferSubmited]);\n  return (\n    <section className={styles.ConfirmTransfer}>\n      <div className={styles.Container}>\n        {state.isLoading ? (\n          \"\"\n        ) : isTransaferSubmited ? (\n          <div className={styles.doneIcon}>\n            <img src=\"/icons/ok-1.1s-200px.svg\" />\n            <h1>Done</h1>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className={styles.Header}>\n          <div className={styles.IMG}></div>\n          <h3 className={styles.Name}>\n            <span className={styles.firstName}>{currentTransfer.name}</span>\n            <span className={styles.lastName}>Mustafa</span>\n          </h3>\n        </div>\n        <div className={styles.Details}>\n          <div className={styles.DetailsContainer}>\n            <span>\n              <FontAwesomeIcon icon={faUniversity} />\n            </span>\n            <h4>Omdurman Branch</h4>\n          </div>\n          <div className={styles.DetailsContainer}>\n            <span>\n              <FontAwesomeIcon icon={faPhone} />\n            </span>\n            <h4>{currentTransfer!.phone}</h4>\n          </div>\n        </div>\n        <div className={styles.Submit}>\n          <input\n            type=\"number\"\n            value={state.amount}\n            name=\"amount\"\n            onChange={handleChange}\n          />\n          <button type=\"submit\" onClick={handleSubmition}>\n            {state.isLoading ? (\n              <TransLoading />\n            ) : isTransaferSubmited ? (\n              \"Done\"\n            ) : (\n              \"Send\"\n            )}\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// export component and connect it to store\nexport default SubmitTrans;\n","import React from \"react\";\nimport styles from \"./detailedsingletrans.module.scss\";\nimport { IconContext } from \"react-icons\";\nimport { BiCommentDetail, AiOutlineNumber } from \"react-icons/all\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport { DetailedSingleTrans } from \"../../types/interfaces/system_api\";\n\nconst DetailedSingleTransaction = () => {\n  // get data from store\n  const { amount, date, name, note } = useSelector<\n    AppState,\n    DetailedSingleTrans\n  >(({ system }) => system.detailedSingleTrans!);\n  return (\n    <div className={styles.detailedsingletrans}>\n      {/* header container */}\n      <div className={styles.header}>\n        {/* receiver avatar */}\n        <span className={styles.avatar}></span>\n        {/* receiver name and date */}\n        <span className={styles.name_date}>\n          <p className=\"\">{name}</p>\n          <p>{date}</p>\n        </span>\n        {/* amount */}\n        <p className={styles.amount}>{`$${amount}`}</p>\n      </div>\n      {/* detailed single trans body */}\n      <div className={styles.body}>\n        {/* transaction note */}\n        <p className={styles.note}>\n          <span className={styles.icon}>\n            <IconContext.Provider value={{ color: \"black\" }}>\n              <BiCommentDetail />\n            </IconContext.Provider>\n          </span>\n          <span className={styles.text}>{note}</span>\n        </p>\n        {/* transaction id */}\n        <p className={styles.transId}>\n          {/* icon */}\n          <span className={styles.icon}>\n            <IconContext.Provider value={{ color: \"black\" }}>\n              <AiOutlineNumber />\n            </IconContext.Provider>\n          </span>\n          {/* text */}\n          <span className={styles.text}>uuid_trans90349$io34</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailedSingleTransaction;\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getReceiver } from \"../../apis/transactions\";\nimport styles from \"./styles.module.scss\";\n\nconst SendMoneyMobile = () => {\n  const [receiverPhone, setReceiverPhone] = useState<string>(\"\");\n  const dispatch = useDispatch();\n  // input Handler\n  const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setReceiverPhone(e.target.value);\n  };\n  // submit Handler\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    if (receiverPhone) {\n      dispatch(getReceiver(receiverPhone));\n    }\n  };\n  return (\n    <div className={styles.sendMoneyMobile}>\n      <p>Send Money</p>\n      <div className={styles.inputArea}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Receiver Number\"\n          value={receiverPhone}\n          onChange={inputHandler}\n        />\n        <button type=\"submit\" onClick={submitHandler}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SendMoneyMobile;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SubmitTrans from \"../../pages/Dashboard/SubmitTransfer/component\";\nimport { TransferStatus } from \"../../types/enums/transactions\";\nimport { AppState } from \"../../types/interfaces/store\";\nimport { CurrentTransfer } from \"../../types/interfaces/trans_reducer\";\nimport SendMoneyMobile from \"../SendMoneyMobile/SendMoneyMobile\";\nimport styles from \"./styles.module.scss\";\n\nfunction SendMoneyPanel() {\n  const { currentTransfer } = useSelector<\n    AppState,\n    { currentTransfer: CurrentTransfer }\n  >(({ transactions }) => ({\n    currentTransfer: transactions.currentTransfer,\n  }));\n  const [isTrxReady, setIsTrxReady] = useState<boolean>(false);\n  useEffect(() => {\n    if (currentTransfer !== TransferStatus.TRANS_LOADING) {\n      setIsTrxReady(true);\n      return;\n    }\n    setIsTrxReady(false);\n  }, [currentTransfer]);\n  return (\n    <div className={styles.sendMoneyPanel}>\n      {isTrxReady ? <SubmitTrans /> : <SendMoneyMobile />}\n    </div>\n  );\n}\n\nexport default SendMoneyPanel;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { InitateClient } from \"./apis/auth\";\nimport { CompoProps } from \"./root.interface\";\nimport Loading from \"./components/Loading/Loading\";\nimport styles from \"./App.module.scss\";\nimport { AppState } from \"./types/interfaces/store\";\nimport Welcome from \"./pages/Welcome/Welcome\";\nimport ConfirmTransfer from \"./pages/Dashboard/SubmitTransfer/component\";\nimport { TransferStatus } from \"./types/enums/transactions\";\nimport { connect } from \"socket.io-client\";\nimport { receiveMoney } from \"./apis/transactions\";\nimport { ReceiveMoneyNotification } from \"./types/interfaces/trans_apis\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport DetailedSingleTransaction from \"./components/DetailedSingleTrans/DetailedSingleTrans\";\nimport SendMoneyMobile from \"./components/SendMoneyMobile/SendMoneyMobile\";\nimport SendMoneyPanel from \"./components/SendMoneyPanel/SendMoneyPanel\";\nimport { checkDeviceScreen } from \"./utils/system\";\nimport { setDeviceType } from \"./apis/system\";\nimport { Devices } from \"./types/enums/system\";\n\nfunction App() {\n  const { search } = useLocation();\n  // use dispatch to send action to the store, change the state of the store\n  const dispatch = useDispatch();\n  // redirect user\n  const { push } = useHistory();\n  // the current route\n  const { pathname } = useLocation();\n  // get state from redux store\n  const { isLogged, currentTransfer, client_id, detailedSingleTrans, device } =\n    useSelector<AppState, CompoProps>((state) => ({\n      isLogged: state.auth.isLogged,\n      currentTransfer: state.transactions.currentTransfer,\n      client_id: state.auth.client?._id!,\n      detailedSingleTrans: state.system.detailedSingleTrans,\n      device: state.system.device,\n    }));\n  // play notification sound\n  const playNotificationSound = () => {\n    const tone = new Audio(\"/sounds/swiftly-610.mp3\");\n    tone.play();\n  };\n  // componet did update\n  useEffect(() => {\n    // listen for isLoggedIn to redirect the user\n    if (isLogged && pathname === \"/\") {\n      push(\"/dashboard\");\n    }\n    // quit if the client id dosnot ready\n    if (!client_id) {\n      return;\n    }\n    // connect the socket\n    const api_url = process.env.REACT_APP_API_URL!;\n    const socket = connect(`${api_url}`, {\n      query: {\n        client_id: client_id,\n      },\n    });\n    // listen to the sockets events\n    socket.on(\"notification\", (notification: ReceiveMoneyNotification) => {\n      // send the updated balance to the redux store\n      dispatch(receiveMoney(notification));\n      // play notification sound\n      playNotificationSound();\n    });\n  }, [client_id, isLogged]);\n  // component did mount\n  useEffect(() => {\n    dispatch(setDeviceType(checkDeviceScreen()));\n    // apis call to decide if user is logged in or not\n    dispatch(InitateClient());\n  }, []);\n  // decide which component will be rendered\n  // null -> loading, false -> Welcome screen, true -> Home page\n  const component = isLogged === null ? Loading : isLogged ? Home : Welcome;\n  // current transfer faild status\n  const { TRANS_ERR, TRANS_LOADING } = TransferStatus;\n  // submit transfer modal\n  const SubmitTransferModal =\n    currentTransfer === TRANS_ERR || currentTransfer === TRANS_LOADING ? (\n      \"\"\n    ) : (\n      <ConfirmTransfer />\n    );\n  return (\n    <div className={styles.App}>\n      {detailedSingleTrans ? <DetailedSingleTransaction /> : \"\"}\n      {/* submit transfer modal */}\n      {device === Devices.DESKTOP ? SubmitTransferModal : \"\"}\n      {/* send money mobile */}\n      {/* SendMoney Mobile Pannel */}\n      {Boolean(search) ? <SendMoneyPanel /> : \"\"}\n      {/* render Home page or Welcome page */}\n      <Switch>\n        <Route component={component} path=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {AuthTypes} from '../../types/enums/auth'\nimport { TransTypes } from '../../types/enums/transactions';\nimport { LoginSuccess } from \"../../types/interfaces/auth_apis\";\nimport { AuthReducerState } from '../../types/interfaces/auth_reducer';\nimport { Client } from '../../types/interfaces/store';\nimport { ReceiveMoneyNotification, SubmitTransferRes } from '../../types/interfaces/trans_apis';\n\nconst initState = {\n  isLogged: null,\n  client: null,\n  errMsg: null\n} as AuthReducerState;\n\nconst loginReducer = (state = initState,action: {type: string, payload: any}): AuthReducerState => {\n  const {LOGIN_SUCCESS, LOGIN_FAILD, SIGN_OUT, AUTH_FAILD, AUTH_SUCCESS, CLEAR_AUTH_Err_MSG} = AuthTypes;\n  const {SUBMIT_TRANSFER, RECEIVE_MONEY} = TransTypes;\n  switch (action.type) {\n    // initate client procces is succeed\n    case LOGIN_SUCCESS: {\n      const {token, client} = action.payload as LoginSuccess;\n      // store token in the local storage\n      localStorage.setItem(\"token\", `Bearer ${token}`)\n      return {\n        ...state,\n        isLogged: true,\n        client\n      }\n    }\n    // in case of login faild\n    case LOGIN_FAILD: {\n      const errMsg = action.payload as string;\n      return {\n        ...state,\n        isLogged: false,\n        client: null,\n        errMsg\n      };\n    }\n    // client sign out\n    case SIGN_OUT: {\n      localStorage.setItem(\"token\", \"\");\n      localStorage.removeItem(\"receiverHis\");\n      localStorage.removeItem(\"notifications\");\n      return {\n        ...state,\n        isLogged: false,\n        client: null,\n      };\n    }\n    // in case of auth faild\n    case AUTH_FAILD: {\n      return {\n        ...state,\n        isLogged: false\n      }\n    }\n    // in case of auth success\n    case AUTH_SUCCESS: {\n      const client = action.payload as Client\n      return {\n        ...state,\n        isLogged: true,\n        client: {\n          ...client,\n          transactionsHistory: client.transactionsHistory.reverse()\n        },\n      }\n    }\n    case SUBMIT_TRANSFER: {\n      const {newBalance, newTransaction} = action.payload as SubmitTransferRes;\n      const transHistory = [newTransaction, ...state.client?.transactionsHistory!]\n      return {\n        ...state,\n        client: {...state.client!, account: {balance: newBalance}, transactionsHistory: transHistory }\n      }\n    }\n    // Receive Money\n    case RECEIVE_MONEY: {\n      const {updatedBalance} = action.payload as ReceiveMoneyNotification\n      return {\n        ...state,\n        client: {\n          ...state.client!,\n          account: {\n            balance: updatedBalance!\n          }\n        }\n      }\n    }\n    // clear auth error message\n    case CLEAR_AUTH_Err_MSG: {\n      return {\n        ...state,\n        errMsg: null\n      }\n    }\n    default:\n      return state;\n  }\n};\nexport default loginReducer","import { Devices, SystemActionsTypes } from \"../../types/enums/system\";\nimport { TransTypes } from \"../../types/enums/transactions\";\nimport { DetailedSingleTrans, ReceiversHistoryEle } from \"../../types/interfaces/system_api\";\nimport { SystemReducerState } from \"../../types/interfaces/system_reducer\";\nimport { ReceiveMoneyNotification } from \"../../types/interfaces/trans_apis\";\n\nconst receiversHis = localStorage.getItem(\"receiverHis\");\nconst notificationRecord = localStorage.getItem(\"notifications\");\nconst initState = {\n    currentRoute: \"\",\n    notifications: notificationRecord ? [...JSON.parse(notificationRecord)] : [],\n    receiversHistory: receiversHis ? [...JSON.parse(receiversHis)] : [],\n    detailedSingleTrans: null,\n    incomingTransAlert: null,\n    device: Devices.DESKTOP\n} as SystemReducerState\n\nconst systemReducer = (state = initState, action: {type: string, payload: any}): SystemReducerState => {\n    const {\n        SET_CURRENT_ROUTE, \n        ADD_RECEIVER_TO_HISTORY, \n        SHOW_DETAILED_SINGLE_TRANS,\n        HIDE__DETAILED_SINGLE_TRANS,\n        SHOW_NOTIFICATIONS,\n        INCOMING_TRANS_ALERT,\n        HIDE_INCOMING_TRANS_ALERT,\n        SET_DEVICE_TYPE\n    } = SystemActionsTypes;\n    const {RECEIVE_MONEY, } = TransTypes;\n    switch (action.type) {\n        // set device type\n        case SET_DEVICE_TYPE: {\n            const deviceType = action.payload as Devices;\n            return {\n                ...state,\n                device: deviceType\n            }\n        }\n        // set the route name\n        case SET_CURRENT_ROUTE: {\n            return {\n              ...state,\n              currentRoute: action.payload,\n            };\n        }\n        // receiver money notification\n        case RECEIVE_MONEY: {\n            const notification = action.payload as ReceiveMoneyNotification\n            return {\n                ...state,\n                notifications: [notification, ...state.notifications]\n            }\n        \n        }\n        // add receiversHistory ele\n        case ADD_RECEIVER_TO_HISTORY: {\n            const receiversHistory = action.payload as ReceiversHistoryEle[]\n            return {\n                ...state,\n                receiversHistory\n            }\n        }\n        // show detailed single trans\n        case SHOW_DETAILED_SINGLE_TRANS: {\n            const detailedSingleTrans = action.payload as DetailedSingleTrans;\n            return {\n                ...state,\n                detailedSingleTrans\n            }\n        }\n        // hide detailed single trans\n        case HIDE__DETAILED_SINGLE_TRANS: {\n            return {\n                ...state,\n                detailedSingleTrans: null\n            }\n        };\n        // set notifications to seen\n        case SHOW_NOTIFICATIONS: {\n            const notificationSeened = action.payload as ReceiveMoneyNotification[];\n            return {\n                ...state,\n                notifications: notificationSeened\n            }\n        };\n        // show income trans alert\n        case INCOMING_TRANS_ALERT: {\n            const notification = action.payload as ReceiveMoneyNotification;\n            console.log(notification);\n            return {\n                ...state,\n                incomingTransAlert: notification\n            }\n        }\n        case HIDE_INCOMING_TRANS_ALERT: {\n            return {\n                ...state,\n                incomingTransAlert: null\n            }\n        }\n        // hide submit transfer modal\n        default:\n        return state;\n    }\n}\nexport default systemReducer","import { TransferStatus, TransTypes } from \"../../types/enums/transactions\"\nimport { Client } from \"../../types/interfaces/store\";\nimport { TransState } from \"../../types/interfaces/trans_reducer\";\n\nconst initState = {\n    currentTransfer: TransferStatus.TRANS_LOADING,\n    submitTransfer: false\n} as TransState\n\nconst transactionsReducer = (state = initState, action: {type: string, payload: any}): TransState => {\n    const {\n        SET_TRANSACTION, \n        SUBMIT_TRANSFER, \n        RECEIVER_NOT_FOUND, \n        SUBMIT_TRANSFER_ERR,\n        HIDE_SUBMIT_TRANS_MODAL,\n        CLEAR_CURRENT_TRANSFER\n    } = TransTypes;\n    switch(action.type){\n        // an error when submit the transaction\n        case SUBMIT_TRANSFER_ERR: {\n            return state\n        }\n        // an error when get the receiver client\n        case RECEIVER_NOT_FOUND: {\n            return {\n                ...state,\n                currentTransfer: TransferStatus.TRANS_ERR,\n            }\n        }\n        // after successfuly geting the client \n        case SET_TRANSACTION: {\n            const receiver = action.payload as Client;\n            return {\n                ...state,\n                currentTransfer: receiver\n            }\n        }\n        case SUBMIT_TRANSFER: {\n            return {\n                ...state,\n                submitTransfer: true\n            }\n        }\n        // hide modal\n        case HIDE_SUBMIT_TRANS_MODAL: {\n            return {\n                ...state,\n                currentTransfer: TransferStatus.TRANS_LOADING\n            }\n        }\n        // Clear Current Transfer to hide submitTransfer Modal\n        case CLEAR_CURRENT_TRANSFER: {\n            return {\n                ...state,\n                currentTransfer: TransferStatus.TRANS_LOADING,\n                submitTransfer: false\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\nexport default transactionsReducer","import { combineReducers } from \"redux\";\nimport loginReducer from \"./reducers/auth\";\nimport systemReducer from \"./reducers/system\";\nimport transactionsReducer from \"./reducers/transactions\";\n\nconst rootReducer = combineReducers({\n  auth: loginReducer,\n  system: systemReducer,\n  transactions: transactionsReducer\n});\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConfirmTransfer\":\"styles_ConfirmTransfer__34w8F\",\"Container\":\"styles_Container__1Vbdk\",\"doneIcon\":\"styles_doneIcon__32b-I\",\"Header\":\"styles_Header__3bCct\",\"Name\":\"styles_Name__NYAKu\",\"IMG\":\"styles_IMG__2ttQk\",\"Details\":\"styles_Details__3fd1-\",\"DetailsContainer\":\"styles_DetailsContainer__2TQm4\",\"Submit\":\"styles_Submit__2PFaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailedsingletrans\":\"detailedsingletrans_detailedsingletrans__3aJCK\",\"header\":\"detailedsingletrans_header__3v4Ha\",\"avatar\":\"detailedsingletrans_avatar__oQHAO\",\"name_date\":\"detailedsingletrans_name_date__2SELC\",\"amount\":\"detailedsingletrans_amount__3zIEO\",\"body\":\"detailedsingletrans_body__1q8Fr\",\"note\":\"detailedsingletrans_note__1s5Xm\",\"transId\":\"detailedsingletrans_transId__1FVhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\",\"LoginForm\":\"Login_LoginForm__1bXz2\",\"signupLink\":\"Login_signupLink__19RKx\",\"logo\":\"Login_logo__3R5vb\",\"googleLogin\":\"Login_googleLogin__GJmb1\",\"seperator\":\"Login_seperator__3CA_r\",\"formFooter\":\"Login_formFooter__3eKsz\",\"ForgetPassword\":\"Login_ForgetPassword__1CUpE\",\"SocialMedia\":\"Login_SocialMedia__3ZQoh\",\"copyRight\":\"Login_copyRight__3R7zq\",\"VectorsArea\":\"Login_VectorsArea__2OOCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUp\":\"signup_signUp__3cVi0\",\"signUpForm\":\"signup_signUpForm__2EB9v\",\"logo\":\"signup_logo__1r4RY\",\"googleLogin\":\"signup_googleLogin__G8Usq\",\"seperator\":\"signup_seperator__1LOq_\",\"formFooter\":\"signup_formFooter__g9sIk\",\"ForgetPassword\":\"signup_ForgetPassword__22flS\",\"SocialMedia\":\"signup_SocialMedia__hNwJ8\",\"copyRight\":\"signup_copyRight__1Fjjz\",\"VectorsArea\":\"signup_VectorsArea__2VXeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__8WNqz\",\"container\":\"Profile_container__2E1Nu\",\"header\":\"Profile_header__1Gc60\",\"sideBar\":\"Profile_sideBar__MzPKX\",\"user\":\"Profile_user__HW04I\",\"avatar\":\"Profile_avatar__XVtQm\",\"navLinks\":\"Profile_navLinks__1n-9x\",\"mainArea\":\"Profile_mainArea__2Kr6O\",\"SignOut_Btn\":\"Profile_SignOut_Btn__Uw_d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MakeTransaction\":\"styles_MakeTransaction__r9CUd\",\"transferTypesContainer\":\"styles_transferTypesContainer__1OLdL\",\"transferBtn\":\"styles_transferBtn__18Evf\",\"TransferWithPhone\":\"styles_TransferWithPhone__10-KY\",\"Country\":\"styles_Country__38q22\",\"Phone\":\"styles_Phone__1_FP1\",\"Img\":\"styles_Img__3rrWV\"};","module.exports = __webpack_public_path__ + \"static/media/wallet.ede1d5ee.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inComeTransAlert\":\"incometransalert_inComeTransAlert__3D0a4\",\"avatar\":\"incometransalert_avatar__-hdYC\",\"container\":\"incometransalert_container__3mtIN\",\"sender\":\"incometransalert_sender__1G0Tb\",\"date\":\"incometransalert_date__1eZMO\",\"amount\":\"incometransalert_amount__3aW4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleReceiver\":\"singlereceiver_singleReceiver__1xG6x\",\"img\":\"singlereceiver_img__3r57R\",\"details\":\"singlereceiver_details__20HSJ\",\"date\":\"singlereceiver_date__30WoT\",\"sendBtn\":\"singlereceiver_sendBtn__1Viqh\"};"],"sourceRoot":""}